{"version":3,"sources":["Header.js","Body.js","BubbleChart.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","Toolbar","IconButton","color","href","Home","Typography","variant","target","GitHub","paper","padding","textAlign","CenteredGrid","props","React","useState","value","setValue","Grid","container","item","xs","Paper","paragraph","onSubmit","event","preventDefault","TextField","label","helperText","onChange","App","this","data","x","y","size","text","mode","marker","sizemode","layout","autosize","useResizeHandler","style","width","height","Component","state","console","log","array","Object","entries","map","gender","genres","genre","words","values","reduce","accumulator","currentValue","flat","rows","_","colIndex","row","setState","disabled","a","axios","get","resp","BubbleChart","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f47c9bc.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { GitHub, Home } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function ButtonAppBar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar>\n                <Toolbar>\n\n                    <IconButton\n                        color=\"inherit\"\n                        href='https://georgefane.github.io/'\n                    >\n                        <Home />\n                    </IconButton>\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Gendered Lyrics\n                    </Typography>\n\n                    <Typography variant=\"body1\" className={classes.title}>\n                        Made by Alex Beloiu, Yongwei Che, and George Fane\n                    </Typography>\n\n                    <IconButton\n                        color=\"inherit\"\n                        href='https://github.com/GeorgeFane/mdining/tree/source'\n                        target='_blank'\n                    >\n                        <GitHub />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Toolbar, Box, Paper, TextField } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n    },\n}));\n\nexport default function CenteredGrid(props) {\n    const classes = useStyles();\n\n    const [value, setValue] = React.useState('');\n    const onChange = (event) => setValue(event.target.value);\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={2}>\n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <Typography paragraph>\n                            This website hosts a queryable database containing the occurance of words within the lyrics of Male, Female, and Other Artists within many different genres.\n                        </Typography>\n\n                        <Typography paragraph>\n                            Input a word you want to search for and a frequency graph will appear showing you the frequency of the lyric in songs by different gendered artists in numerous genres.\n                        </Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs>\n                    <form\n                        className={classes.root}\n                        onSubmit={(event) => {\n                            event.preventDefault();\n                            props.setValue(value)\n                        }}\n                    >\n                        <TextField\n                            label=\"Search Lyric\"\n                            variant=\"outlined\"\n                            helperText={'Searched: ' + props.value}\n                            onChange={onChange}\n                        />\n                    </form>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React from 'react';\nimport Plot from 'react-plotly.js';\n\nclass App extends React.Component {\n    render() {\n        const { data, value } = this.props;\n        const [x, y, size, text] = data;\n        const title = `Frequency per Million of \"${value}\" by Gender and Genre`;\n\n        return (\n            <Plot\n                data={[\n                    {\n                        x, y, text, \n                        mode: 'markers+text',\n                        marker: {\n                            size,\n                            sizemode: 'area',\n                        },\n                    },\n                ]}\n                layout={{\n                    title,\n                    autosize: true,\n                }}\n                useResizeHandler={true}\n                style={{width: \"100%\", height: \"100%\"}}\n            />\n        );\n    }\n}\n\nexport default App;\n","import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Typography, Toolbar, Box, Paper, Grid } from '@material-ui/core';\n\nimport axios from 'axios';\nimport Header from './Header';\nimport Body from './Body';\nimport BubbleChart from './BubbleChart';\n\nconst url = 'https://raw.githubusercontent.com/beloiual/gendered-lyrics/main/React.JS/src/src/totalData.json'\n\nclass App extends React.Component {\n    constructor (props) {\n        super(props);\n        \n        this.state = {\n            data: {},\n            disabled: true,\n\n            value: null,\n            rows: [],\n        };\n    }\n\n    setValue = (value) => {\n        const { data } = this.state;\n        console.log(data)\n\n        const array = Object.entries(data).map( ([gender, genres], y) => (\n            Object.entries(genres).map( ([genre, words], x) => {\n                const reducer = (accumulator, currentValue) => (\n                    accumulator + currentValue\n                );\n                const size = !words[value] ? 0 :\n                    words[value] * 5000000 / Object.values(words).reduce(reducer);\n                    \n                const text = size ? genre + ': ' + gender : '';\n                const height = y + (x % 2) * 0.2;\n                \n                return [ genre, height, size, text ];\n            })\n        )).flat(1);\n        console.log(array)\n\n        // transpose\n        const rows = array[0].map((_, colIndex) => array.map(row => row[colIndex]));\n        this.setState({ rows, value });\n    }\n\n    async componentDidMount() {\n        const resp = await axios.get(url)\n        const { data } = resp;\n\n        const disabled = false;\n        this.setState({ data, disabled });\n\n        this.setValue('hello');\n    }\n\n    render() {\n        const { disabled, value, rows } = this.state;\n        console.log(value)\n\n        return (\n            <div>\n                <Header />\n                <Toolbar />\n\n                <Body\n                    setValue={this.setValue}\n                    disabled={disabled}\n                    value={value}\n                />\n\n                <BubbleChart\n                    data={rows}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}